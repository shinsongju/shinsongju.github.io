{"version":3,"sources":["logo.svg","data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","connect","state","reducer","alert열렸니","reducer2","props","Table","responsive","map","a","i","name","quan","onClick","dispatch","type","데이터","className","Detail","lazy","재고context","React","createContext","Card","useContext","history","useHistory","Col","xs","md","push","shoes","src","width","Test","재고","App","useState","Data","shoes변경","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","exact","path","Button","variant","Provider","value","Row","s","axios","get","then","result","data","catch","console","log","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d499236f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\r\n\r\nexport default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] ","/* eslint-disable */\r\n\r\nimport React, { useEffect, memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport './Detail.scss';\r\n\r\nfunction Cart(props) {\r\n    // (state)는 redux 내에 있던 모든 state를 의미\r\n    // 이게 요새 버전인가봄...\r\n    // let state = useSelector((state)=>state.reducer);\r\n    // let dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th> # </th>\r\n                    <th> 상품명 </th>\r\n                    <th> 수량 </th>\r\n                    <th> 변경 </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.state.map((a, i)=>{\r\n                            return (\r\n                                <tr key={ i }>\r\n                                    <td> {a.id} </td>\r\n                                    <td> {a.name} </td>\r\n                                    <td> {a.quan} </td>\r\n                                    <td>\r\n                                        <button onClick={ ()=>{ props.dispatch({ type : '수량증가', 데이터 : a.id }) } }> + </button>\r\n                                        <button onClick={ ()=>{ props.dispatch({ type : '수량감소', 데이터 : a.id }) } }> - </button>    \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n\r\n            {\r\n                props.alert열렸니 === true\r\n                ? (<div className=\"my-alert-yellow\">\r\n                    <p> 지금 구매하시면 신규 할인 20% </p>\r\n                    <button onClick={ ()=>{ props.dispatch({ type : 'alert닫기' }) } }> 닫기 </button>\r\n                    </div>)\r\n                : null\r\n            }\r\n\r\n            {/* <Parent 이름=\"송주\" 나이=\"25\"></Parent> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction state를props화(state) {\r\n    return {\r\n        // 상품명 : state[0].name\r\n        state : state.reducer,\r\n        alert열렸니 : state.reducer2\r\n    }\r\n}\r\n\r\nfunction Parent(props) {\r\n    return (\r\n        <div>\r\n            <Child1 이름={ props.이름 }></Child1>\r\n            <Child2 나이={ props.나이 }></Child2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Child1() {\r\n    useEffect(()=>{ console.log('렌더링 됨 1') });\r\n\r\n    return <div> 111 </div>\r\n}\r\n\r\nlet Child2 = memo(function() {\r\n    useEffect(()=>{ console.log('렌더링 됨 2') });\r\n\r\n    return <div> 222 </div>\r\n});\r\n\r\nexport default connect(state를props화)(Cart)\r\n// export default Cart;","/* eslint-disable */\n\nimport React, { useContext, useState, lazy, Suspense } from 'react';\nimport logo from './logo.svg';\nimport { Navbar, Container, Nav, NavDropdown, Button, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js'\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n// import Detail from './Detail.js';\n// let Detail = lazy(()=>import('./Detail.js'));로도 표현 가능\nlet Detail = lazy(()=>{ return import('./Detail.js') });\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"/\"> Shoe Shop </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {/* Nav.Link 안에 Link 태그가 들어있으면 크롬 콘솔에서 오류가 생김 두 태그가 모두 a 태그와 같은 역할을 하기 때문임 */}\n              <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n              {/* 오류를 없애고 싶으면 Link 태그를 없애고 as={Link} 써주면 됨 */}\n              <Nav.Link as={Link} to=\"/cart\"> Cart </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* Switch는 중복을 허용하지 않기 때문에 path가 일치하는 여러개의 Router가 있더라도 가장 상위에 작성된 것만 보여줌 */}\n      <Switch>\n      {/* exact = 경로가 정확히 일치할 때만 보여줌 */}\n      <Route exact path = \"/\">\n        <div className=\"jumbotron\">\n          <h1> 20% Season OFF </h1>\n          <p> This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information. </p>\n          <p> <Button variant=\"primary\"> Learn more </Button> </p>\n        </div>\n\n        <Container>\n          <재고context.Provider value={ 재고 }>\n          <Row>\n            {\n              shoes.map((s, i) => {\n                return <Card shoes={ shoes[i] } i={ i } key={ i }/>\n              })\n            }\n          </Row>\n          </재고context.Provider>\n          <button className=\"btn btn-primary\" onClick={ ()=>{\n            // 로딩 중 UI 보이도록\n\n            // axios.post('서버 URL', { id : 'songju', pw : 1011 });\n\n            // 서버에 get 요청 (axios.get(데이터 요청할 URL))\n            // 무엇을 요청할지는 서버 개발자에게 문의\n            // 성공하면 then() / 실패하면 catch()\n            // fetch()도 사용법은 비슷함 하지만 axios는 json을 object로 알아서 바꿔주기 때문에 더 편리\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then( (result)=>{\n              // 로딩 중 UI 안 보이도록\n\n              shoes변경([...shoes, ...result.data]);\n            } )\n            .catch( ()=>{\n              // 로딩 중 UI 안 보이도록\n\n              console.log('실패했어요')\n            } )\n          } }> 더 보기 </button>\n        </Container>\n      </Route>\n      <Route path = \"/detail/:id\">\n        <재고context.Provider value={ 재고 }>\n          <Suspense fallback={<div> 로딩중이에요 </div>}>\n            <Detail shoes={ shoes } 재고={ 재고 } 재고변경={ 재고변경 }/>\n          </Suspense>\n        </재고context.Provider>\n      </Route>\n      <Route>\n        <Cart path=\"/cart\"></Cart>\n      </Route>\n      {/* /:id 는 모든 문자를 의미 (id는 파라미터라서 개발자 마음대로 작명하면 됨) */}\n      <Route path=\"/:id\">\n        <div> 아무거나 적었을 때 이거 보여주셈 </div>\n      </Route>\n      </Switch>\n      {/* <Route path=\"/어쩌구\" component={ Modal }></Route> */}\n\n      {/* <div className=\"container\">\n        <div className=\"row\">\n          {\n            shoes.map((s, i) => {   // s = shoes에 있는 데이터 하나하나를 의미\n              return <Card shoes={ shoes[i] } i={ i } key={ i }/>\n            })\n          }\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    // <div className=\"col-md-4\">\n    //   <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n    //   <h4> { props.shoes.title } </h4>\n    //   <p> { props.shoes.content } & { props.shoes.price } </p>\n    // </div>\n\n    <Col xs={12} md={4} onClick={ ()=>{ history.push('/detail/' + props.shoes.id) } }>\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n      <h4> { props.shoes.title } </h4>\n      <p> { props.shoes.content } & { props.shoes.price } </p>\n      {/* { 재고[props.i] } */}\n      <Test></Test>\n    </Col>\n  )\n}\n\nfunction Test() {\n  let 재고 = useContext(재고context);\n\n  return <p> { 재고[0] } </p>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// BrowserRouter는 리액트가 아니라 서버에 라우팅을 요청할 수 있어서 서버에서 서버 라우팅을 방지하는 API를 작성해야함\n// HashRouter는 주소 뒤에 /#/ 이 붙으며 # 뒤에 작성하는 것은 서버에 전달되지 않아서 라우팅을 안전하게 할 수 있음\n// 이 부분은 서버 개발자와 상의해야함\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if ( 액션.type === 'alert닫기' ) {\n    state = false;\n\n    return state;\n  }\n  else {\n    return state;\n  }\n}\n\nlet 초기값 = [\n  { id : 0, name : '멋진 신발', quan : 2 }, \n  { id : 1, name : '멋진 신발 2', quan : 1 }\n];\n\nfunction reducer(state = 초기값, 액션) {\n  if ( 액션.type === '항목추가' ) {\n    let found = state.findIndex((a)=>{ return a.id === 액션.데이터.id });\n\n    if ( found >= 0 ) {\n      let copy = [...state];\n\n      copy[found].quan++;\n\n      return copy;\n    }\n    else {\n      let copy = [...state];\n    \n      copy.push(액션.데이터);\n  \n      return copy;\n    }\n  }\n  else if ( 액션.type === '수량증가' ) {\n    let copy = [...state];\n\n    copy[액션.데이터].quan++;\n\n    return copy;\n  }\n  else if ( 액션.type === '수량감소' ) {\n    // 수량이 음수로 떨어지면 0으로 고정되도록 조건문 달기\n\n    let copy = [...state];\n\n    copy[액션.데이터].quan--;\n\n    return copy;\n  }\n  else {\n    return state;\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}