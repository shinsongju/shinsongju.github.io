{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Info","재고","Detail","useState","alert","alert변경","useEffect","axios","get","타이머","setTimeout","clearTimeout","useParams","history","useHistory","찾은상품","shoes","find","상품","className","src","width","onClick","arrayCopy","재고변경","push","Card","Col","xs","md","i","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","to","as","NavDropdown","Item","Divider","exact","path","Button","variant","Row","map","s","then","result","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db700960.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\r\n\r\nexport default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] ","/* eslint-disable */\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\n// styled-components의 장점 : 컴포넌트가 많아지면 class 겹칠 일이 줄어듦\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.색상 };\r\n`;\r\n\r\n// Hook으로 컴포넌트의 lifecycle 사이사이에 명령을 줄 수 있음\r\n// 이건 옛날 방식인가봄\r\n// class Detail2 extends React.Component {\r\n//     componentDidMount() {\r\n\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n\r\n//     }\r\n// }\r\n\r\nfunction Detail(props) {\r\n  let [alert, alert변경] = useState(true);\r\n  let [inputData, inputData변경] = useState('');\r\n\r\n  // 이게 요즘 방식\r\n  // 컴포넌트가 mount 되었을 때, update 되었을 때 특정 코드를 실행할 수 있음\r\n  // 여러 번 적어도 됨 적은 순서로 실행됨\r\n  // [alert]는 alert의 상태가 변경될 때만 실행하라는 의미... [alert, inputData...] 등등 더 적을 수도 있음\r\n  // []가 빈칸이라면 맞는 조건이 없기 때문에 페이지가 로드됐을때만 한번 실행되고 그 이후엔 안 됨\r\n  useEffect(()=>{\r\n    // Detail 페이지가 로드됐을 때만 한번 실행시킬 것이라면 useEffect의 조건에 [] 달아주면 됨\r\n    axios.get();\r\n    \r\n    let 타이머 = setTimeout(()=>{\r\n      alert변경(false);\r\n    }, 2000);\r\n\r\n    // 컴포넌트가 unmount 될 때(Detail이라는 컴포넌트가 사라질 때) 실행하려면 return 이용\r\n    // return function 어쩌구(){ 실행할 코드 };\r\n    // return ()=>{ 실행할 코드 };\r\n    return () => { clearTimeout(타이머) }\r\n  }, [alert]);\r\n\r\n    \r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  let 찾은상품 = props.shoes.find(function(상품) {\r\n    return 상품.id == id;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"red\"> Detail </제목>\r\n          {/* <제목 색상={ 'red' }> Detail </제목> */}\r\n      </박스>\r\n      \r\n      {/* { inputData }\r\n      <input onChange={ (e)=>{ inputData변경(e.target.value) } }/> */}\r\n      \r\n      {\r\n        alert === true\r\n        ? (<div className=\"my-alert-yellow\">\r\n            <p> 재고가 얼마 남지 않았습니다. </p>\r\n          </div>)\r\n        : null\r\n      }      \r\n\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <img src={ 'https://codingapple1.github.io/shop/shoes' + (찾은상품.id+1) + '.jpg' } width=\"100%\" />\r\n      </div>\r\n      <div className=\"col-md-6 mt-4\">\r\n        <h4 className=\"pt-5\"> { 찾은상품.title } </h4>\r\n        <p> { 찾은상품.content } </p>\r\n        <p> { 찾은상품.price }원 </p>\r\n        <Info 재고={ props.재고 }></Info>\r\n        <button className=\"btn btn-danger\" onClick={ ()=>{ \r\n          var arrayCopy = [...props.재고];\r\n          arrayCopy[0]--;\r\n          props.재고변경(arrayCopy);\r\n        } }>주문하기</button> \r\n        &nbsp;\r\n        {/* history.push('/') 는 '/' 라는 경로로 이동시켜줌 */}\r\n        <button className=\"btn btn-danger\" onClick={ ()=>{ history.push(\"/\"); } }>뒤로가기</button>\r\n      </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p> 재고 : { props.재고[0] } </p>\r\n  )\r\n}\r\n\r\nexport default Detail;","/* eslint-disable */\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { Navbar, Container, Nav, NavDropdown, Button, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js'\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\"> Shoe Shop </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {/* Nav.Link 안에 Link 태그가 들어있으면 크롬 콘솔에서 오류가 생김 두 태그가 모두 a 태그와 같은 역할을 하기 때문임 */}\n              <Nav.Link><Link to=\"/\"> Home </Link></Nav.Link>\n              {/* 오류를 없애고 싶으면 Link 태그를 없애고 as={Link} 써주면 됨 */}\n              <Nav.Link as={Link} to=\"/detail\"> Detail </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* Switch는 중복을 허용하지 않기 때문에 path가 일치하는 여러개의 Router가 있더라도 가장 상위에 작성된 것만 보여줌 */}\n      <Switch>\n      {/* exact = 경로가 정확히 일치할 때만 보여줌 */}\n      <Route exact path = \"/\">\n        <div className=\"jumbotron\">\n          <h1> 20% Season OFF </h1>\n          <p> This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information. </p>\n          <p> <Button variant=\"primary\"> Learn more </Button> </p>\n        </div>\n\n        <Container>\n          <Row>\n            {\n              shoes.map((s, i) => {\n                return <Card shoes={ shoes[i] } i={ i } key={ i }/>\n              })\n            }\n          </Row>\n          <button className=\"btn btn-primary\" onClick={ ()=>{\n            // 로딩 중 UI 보이도록\n\n            // axios.post('서버 URL', { id : 'songju', pw : 1011 });\n\n            // 서버에 get 요청 (axios.get(데이터 요청할 URL))\n            // 무엇을 요청할지는 서버 개발자에게 문의\n            // 성공하면 then() / 실패하면 catch()\n            // fetch()도 사용법은 비슷함 하지만 axios는 json을 object로 알아서 바꿔주기 때문에 더 편리\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then( (result)=>{\n              // 로딩 중 UI 안 보이도록\n\n              shoes변경([...shoes, ...result.data]);\n            } )\n            .catch( ()=>{\n              // 로딩 중 UI 안 보이도록\n\n              console.log('실패했어요')\n            } )\n          } }> 더 보기 </button>\n        </Container>\n      </Route>\n      <Route path = \"/detail/:id\">\n        <Detail shoes={ shoes } 재고={ 재고 } 재고변경={ 재고변경 }/>\n      </Route>\n      {/* /:id 는 모든 문자를 의미 (id는 파라미터라서 개발자 마음대로 작명하면 됨) */}\n      <Route path=\"/:id\">\n        <div> 아무거나 적었을 때 이거 보여주셈 </div>\n      </Route>\n      </Switch>\n      {/* <Route path=\"/어쩌구\" component={ Modal }></Route> */}\n\n      {/* <div className=\"container\">\n        <div className=\"row\">\n          {\n            shoes.map((s, i) => {   // s = shoes에 있는 데이터 하나하나를 의미\n              return <Card shoes={ shoes[i] } i={ i } key={ i }/>\n            })\n          }\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nfunction Card(props) {\n  return (\n    // <div className=\"col-md-4\">\n    //   <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n    //   <h4> { props.shoes.title } </h4>\n    //   <p> { props.shoes.content } & { props.shoes.price } </p>\n    // </div>\n\n    <Col xs={12} md={4}>\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n      <h4> { props.shoes.title } </h4>\n      <p> { props.shoes.content } & { props.shoes.price } </p>\n    </Col>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// BrowserRouter는 리액트가 아니라 서버에 라우팅을 요청할 수 있어서 서버에서 서버 라우팅을 방지하는 API를 작성해야함\n// HashRouter는 주소 뒤에 /#/ 이 붙으며 # 뒤에 작성하는 것은 서버에 전달되지 않아서 라우팅을 안전하게 할 수 있음\n// 이 부분은 서버 개발자와 상의해야함\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}